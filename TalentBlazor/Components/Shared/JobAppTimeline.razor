@inherits AppComponentBase

<div class="bg-white px-4 py-5 shadow sm:rounded-lg sm:px-6">
    <h2 id="timeline-title" class="text-lg font-medium text-gray-900">Timeline</h2>
    @if (JobApplication != null)
    {
        <!-- Activity Feed -->
        <div class="mt-6 flow-root">
            <ul role="list" class="-mb-8">

                @foreach (var e in GetJobEvents().OrderBy(x => x.EventDate))
                {
                    <li>
                        <div class="relative pb-8">
                            @if (GetJobEvents().OrderBy(x => x.EventDate).Last().Id != e.Id || (JobApplication?.ApplicationStatus == JobApplicationStatus.Disqualified || JobApplication?.ApplicationStatus == JobApplicationStatus.Offer))
                            {
                                <span class="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"></span>
                            }

                            <div class="relative flex space-x-3">
                                <div>
                                    @switch (e.Status)
                                    {
                                        case JobApplicationStatus.Applied:
                                            <span class="h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white">
                                                <!-- Heroicon name: solid/user -->
                                                <svg class="w-5 h-5 text-white" x-description="Heroicon name: solid/user" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                    <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                                                </svg>
                                            </span>
                                            break;
                                        case JobApplicationStatus.PhoneScreening:
                                            <span class="h-8 w-8 rounded-full bg-blue-500 flex items-center justify-center ring-8 ring-white">
                                                <svg class="w-5 h-5 text-white" x-description="Heroicon name: solid/thumb-up" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                  <path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z"></path>
                                                </svg>
                                            </span>
                                            break;
                                        case JobApplicationStatus.PhoneScreeningCompleted:
                                            <span class="h-8 w-8 rounded-full bg-green-500 flex items-center justify-center ring-8 ring-white">
                                                <!-- Heroicon name: solid/check -->
                                                <svg class="w-5 h-5 text-white" x-description="Heroicon name: solid/check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                                </svg>
                                            </span>
                                            break;
                                        case JobApplicationStatus.Interview:
                                            <span class="h-8 w-8 rounded-full bg-blue-500 flex items-center justify-center ring-8 ring-white">
                                                <!-- Heroicon name: solid/user -->
                                                <svg class="w-5 h-5 text-white" x-description="Heroicon name: solid/thumb-up" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                  <path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z"></path>
                                                </svg>
                                            </span>
                                            break;
                                        case JobApplicationStatus.InterviewCompleted:
                                            <span class="h-8 w-8 rounded-full bg-green-500 flex items-center justify-center ring-8 ring-white">
                                                <svg class="w-5 h-5 text-white" x-description="Heroicon name: solid/check" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                                </svg>
                                            </span>
                                            break;
                                        case JobApplicationStatus.Offer:
                                            <span class="h-8 w-8 rounded-full bg-blue-500 flex items-center justify-center ring-8 ring-white">
                                                <!-- Heroicon name: solid/currency-dollar -->
                                                <svg class="w-5 h-5 text-white" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 256"><path fill="currentColor" d="M152 120h-16V56h8a32.1 32.1 0 0 1 32 32a8 8 0 0 0 16 0a48 48 0 0 0-48-48h-8V24a8 8 0 0 0-16 0v16h-12a48 48 0 0 0 0 96h12v64h-16a32.1 32.1 0 0 1-32-32a8 8 0 0 0-16 0a48 48 0 0 0 48 48h16v16a8 8 0 0 0 16 0v-16h16a48 48 0 0 0 0-96Zm-32 0h-12a32 32 0 0 1 0-64h12Zm32 80h-16v-64h16a32 32 0 0 1 0 64Z"/></svg>
                                            </span>
                                            break;
                                        case JobApplicationStatus.Disqualified:
                                            <span class="h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-red">
                                                <!-- Heroicon name: solid/user -->
                                                <svg class="w-5 h-5 text-white" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11s11-4.925 11-11S18.075 1 12 1Zm3.707 8.707a1 1 0 0 0-1.414-1.414L12 10.586L9.707 8.293a1 1 0 1 0-1.414 1.414L10.586 12l-2.293 2.293a1 1 0 1 0 1.414 1.414L12 13.414l2.293 2.293a1 1 0 0 0 1.414-1.414L13.414 12l2.293-2.293Z" clip-rule="evenodd"/></svg>
                                            </span>
                                            break;
                                    }

                                </div>
                                <div class="min-w-0 flex-1 flex justify-between space-x-4">
                                    <div>
                                        @switch (e.Status)
                                        {
                                            case JobApplicationStatus.Applied:
                                                <p class="text-sm text-gray-500">@(e.Description) to <a href="/jobs/@JobApplication.JobId" class="font-medium text-gray-900 whitespace-nowrap">@JobApplication.Position?.Title</a></p>
                                                break;
                                            case JobApplicationStatus.PhoneScreening:
                                            case JobApplicationStatus.PhoneScreeningCompleted:
                                            case JobApplicationStatus.Interview:
                                            case JobApplicationStatus.InterviewCompleted:
                                            case JobApplicationStatus.Offer:
                                            case JobApplicationStatus.Disqualified:
                                                <p class="text-sm text-gray-500">@(e.Description) by <a href="/jobs/@JobApplication.JobId" class="font-medium text-gray-900 whitespace-nowrap">@(e.ApplicationUser?.DisplayName)</a></p>
                                                break;
                                        }

                                    </div>
                                    <div class="text-right text-sm whitespace-nowrap text-gray-500">
                                        <time datetime="@e?.EventDate.ToString("yyyy-MM-dd")">@e?.EventDate.ToString("MMM d")</time>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                }

                @if (!GetJobEvents().IsEmpty() && JobApplication != null)
                {
                    var lastEvent = GetJobEvents().MaxBy(x => x.EventDate);
                    if (lastEvent is { Status: JobApplicationStatus.Offer })
                    {
                                            <li>
                        <div class="relative pb-8">
                            <div class="relative flex space-x-3">
                                <div>
                                    <span class="h-8 w-8 rounded-full bg-amber-400 flex items-center justify-center ring-8 ring-white">
                                        <!-- Heroicon name: solid/currency-dollar -->
                                        <svg class="w-5 h-5 text-white" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" width="1em" height="1em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 48 48"><path fill="currentColor" fill-rule="evenodd" d="M12 7a1 1 0 0 1 1-1h22a1 1 0 0 1 1 1v1h5a1 1 0 0 1 1 1v6a5 5 0 0 1-5 5h-1.683A12.017 12.017 0 0 1 26 27.834V34h6a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1H16a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h6v-6.166A12.017 12.017 0 0 1 12.683 20H11a5 5 0 0 1-5-5V9a1 1 0 0 1 1-1h5V7Zm24 9v-6h4v5a3 3 0 0 1-3 3h-1v-2Zm-24-6H8v5a3 3 0 0 0 3 3h1v-8Z" clip-rule="evenodd"/></svg>
                                    </span>
                                </div>
                                <div class="min-w-0 flex-1 flex justify-between space-x-4">
                                    <div>
                                        <p class="text-sm text-gray-500"><a href="/contacts/@(JobApplication.Applicant?.Id)" class="font-medium text-gray-900 whitespace-nowrap">@(JobApplication.Applicant?.DisplayName)</a> accepted the <a href="/jobs/@JobApplication.JobId" class="font-medium text-gray-900 whitespace-nowrap">@JobApplication.Position?.Title</a> position</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                    }
                }
                @if (JobApplication is { ApplicationStatus: JobApplicationStatus.Disqualified })
                {
                    <li>
                        <div class="relative pb-8">

                            <div class="relative flex space-x-3">
                                <div>
                                    <span class="h-8 w-8 rounded-full bg-red-500 flex items-center justify-center ring-8 ring-white">
                                        <!-- Heroicon name: solid/currency-dollar -->
                                <span class="oi oi-x text-white pb-2  text-xl"></span>
                                    </span>
                                </div>
                                <div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4">
                                    <div>
                                        <p class="text-sm text-gray-500">Disqualified for <a href="/jobs/@JobApplication.JobId" class="font-medium text-gray-900">@(JobApplication.Position.Title)</a> position</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </div>
        <AuthorizeView>
            <Authorized>
                <div class="mt-6 flex flex-col justify-stretch">
                    @switch (JobApplication!.ApplicationStatus)
                    {
                        case JobApplicationStatus.Applied:
                        case JobApplicationStatus.PhoneScreening:
                        case JobApplicationStatus.PhoneScreeningCompleted:
                        case JobApplicationStatus.Interview:
                        case JobApplicationStatus.InterviewCompleted:
                            <button type="button" @onclick="(e) => AdvanceClick(JobApplication.ApplicationStatus)" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[JobApplication.ApplicationStatus + 1]</button>
                            break;
                        case JobApplicationStatus.Disqualified:
                            break;
                    }
                </div>
            </Authorized>
        </AuthorizeView>
    }
</div>

@code {
    [Parameter]
    public JobApplication? JobApplication { get; set; }

    [Parameter]
    public int JobApplicationId { get; set; }

    [Parameter]
    public EventCallback<JobApplicationStatus> OnAdvanceClick { get; set; }

    [Parameter]
    public EventCallback<JobApplicationStatus> OnDisqualifyClick { get; set; }


    List<JobApplicationEvent>? jobAppEvents;
    ResponseStatus? errorStatus;

    List<JobApplicationEvent> GetJobEvents() => jobAppEvents ?? new List<JobApplicationEvent>();

    async Task AdvanceClick(JobApplicationStatus status)
    {
        await OnAdvanceClick.InvokeAsync(status);
        await RefreshJobAppEvents();
    }

    async Task DisqualifyClick(JobApplicationStatus status)
    {
        await OnDisqualifyClick.InvokeAsync(status);
        await RefreshJobAppEvents();
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        await RefreshJobAppEvents();
        await base.OnParametersSetAsync();
    }

    async Task RefreshJobAppEvents()
    {
        var api = await ApiAsync(new QueryJobAppEvents {
            JobApplicationId = JobApplicationId
        });
        if (api.Succeeded)
            jobAppEvents = api.Response!.Results;
        else
            errorStatus = api.Error;

        this.StateHasChanged();
    }

    Dictionary<JobApplicationStatus, string> jobAppStatusMapping = new() {
        { JobApplicationStatus.Applied, "Applied" },
        { JobApplicationStatus.Interview, "Interview" },
        { JobApplicationStatus.InterviewCompleted, "Interview Completed" },
        { JobApplicationStatus.PhoneScreening, "Phone Screening" },
        { JobApplicationStatus.PhoneScreeningCompleted, "Phone Screening Completed" },
        { JobApplicationStatus.Offer, "Offer" },
        { JobApplicationStatus.Disqualified, "Disqualified" }
    };
}
