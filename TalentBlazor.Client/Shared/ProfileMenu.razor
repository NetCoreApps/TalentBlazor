@inject ServiceStackStateProvider AuthStateProvider;
@inject NavigationManager NavigationManager;

<!-- Profile dropdown -->
<div class="ml-3 relative flex-shrink-0">
    <AuthorizeView>
        <Authorized>
            <div>
                <button type="button" @onclick="ToggleNavMenu" class="bg-gray-50 rounded-full flex text-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-purple-500" id="user-menu-button" aria-expanded="false" aria-haspopup="true">
                    <span class="sr-only">Open user menu</span>
                    <img class="rounded-full h-8 w-8" src="@context.User.GetProfileUrl()" alt="@context.User.GetDisplayName()">
                </button>
            </div>

            <!--
            Dropdown menu, show/hide based on menu state.

            Entering: "transition ease-out duration-100"
                From: "transform opacity-0 scale-95"
                To: "transform opacity-100 scale-100"
            Leaving: "transition ease-in duration-75"
                From: "transform opacity-100 scale-100"
                To: "transform opacity-0 scale-95"
            -->
            <div class="@(collapseNavMenu == true ? "hidden" : "") origin-top-right absolute z-10 right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button" tabindex="-1">
                <!-- Active: "bg-gray-100", Not Active: "" -->
                <NavLink href="/" class="block py-2 px-4 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-0"> Your Profile </NavLink>

                <a href="" @onclick="logout" class="block py-2 px-4 text-sm text-gray-700" role="menuitem" tabindex="-1" id="user-menu-item-2"> Sign out </a>
            </div>
        </Authorized>
        <Authorizing>
            <NavLink class="" href=@LoginUrl>Login</NavLink>
        </Authorizing>
        <NotAuthorized>
            <NavLink class="" href=@LoginUrl>Login</NavLink>
        </NotAuthorized>
    </AuthorizeView>
</div>


@code {
    bool collapseNavMenu = true;

    string? LoginUrl { get; set; }

    void ToggleNavMenu() => collapseNavMenu = !collapseNavMenu;

    protected override Task OnParametersSetAsync()
    {
        LoginUrl = NavigationManager.GetLoginUrl();
        return base.OnParametersSetAsync();
    }

    async Task logout()
    {
        await AuthStateProvider.LogoutAsync();
        NavigationManager.NavigateTo(LoginUrl ?? "/", true);
    }
}
