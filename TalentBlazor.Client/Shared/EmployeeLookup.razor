@using TalentBlazor.ServiceModel
@inject IJSRuntime JsRuntime

<div>
    <label for="employeeSearchBox" class="block text-sm font-medium text-gray-700 mt-4 mb-2">@(ControlTitle)</label>
    <div class="@(selectedResult != null ? "" : "shadow-2xl") mx-auto max-w-3xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white ring-1 ring-black ring-opacity-5 transition-all">
        <div class="relative">
            
            <!-- Heroicon name: solid/search -->
            @if (selectedResult == null)
            {
                <svg class="pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                </svg>
                <input type="text" @onfocus="onSearchFocus" @bind-value="searchTerm" @bind-value:event="oninput" @onkeyup="onSearchTermChanged" name="employeeSearchBox" class="h-12 w-full border-0 bg-transparent pl-11 pr-4 text-gray-800 placeholder-gray-400 focus:ring-0 sm:text-sm" placeholder="Search..." role="combobox" aria-expanded="false" aria-controls="options" />
            }
            else
            {
                <div class="py-4 px-4 flex">
                    <img class="h-10 w-10 rounded-full" src="@(selectedResult.ProfileUrl)" alt="">
                    <div class="ml-3 flex-grow-1">
                        <p class="text-sm font-medium text-gray-900">@(selectedResult.FirstName + " " + selectedResult.LastName)</p>
                        <p class="text-sm text-gray-500">@(selectedResult.Email)</p>
                    </div>
                    <div class="flex-shrink-1">
                        <button type="button" @onclick="(e) => selectedResult = null" class="inline-flex items-center shadow-sm px-2.5 py-0.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50"> Change </button>
                    </div>
                </div>
            }
        </div>

        <div class="flex divide-x divide-gray-100 @((filtered().Count() == 0 || hasMadeSearch == false) ? "hidden" : "")">
            <!-- Preview Visible: "sm:h-96" -->
            <div class="max-h-96 min-w-0 flex-auto scroll-py-4 overflow-y-auto px-6 py-4 sm:h-96">
                <!-- Results, show/hide based on command palette state. -->
                <ul class="-mx-2 text-sm text-gray-700" id="options" role="listbox">
                    @foreach (var user in filtered())
                    {
                        var u = user;
                        <li @onmouseover="(e) => updateActive(u)" @onclick="(e) => selectUser(u)" class="group flex cursor-default select-none items-center rounded-md p-2 hover:bg-gray-100" id="option-1" role="option" tabindex="-1">
                            <img src="@user.ProfileUrl" alt="" class="h-6 w-6 flex-none rounded-full">
                            <span class="ml-3 flex-auto truncate">@(user.FirstName + " " + user.LastName)</span>
                            <!-- Not Active: "hidden" -->
                            <!-- Heroicon name: solid/chevron-right -->
                        <svg class="ml-3 hidden h-5 w-5 flex-none text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                            </svg>
                        </li>
                    }
                </ul>
            </div>

            @if (currentActive != null)
            {
                <!-- Active item side-panel, show/hide based on active state -->
                <div class="hidden h-96 w-1/2 flex-none flex-col divide-y divide-gray-100 overflow-y-auto sm:flex">
                    <div class="flex-none p-6 text-center">
                        <img src="@(currentActive.ProfileUrl)" alt="" class="mx-auto h-16 w-16 rounded-full">
                        <h2 class="mt-3 font-semibold text-gray-900">@(currentActive.FirstName + " " + currentActive.LastName)</h2>
                        <p class="text-sm leading-6 text-gray-500">@(currentActive.Title)</p>
                    </div>
                    <div class="flex flex-auto flex-col justify-between p-6">
                        <dl class="grid grid-cols-1 gap-x-6 gap-y-3 text-sm text-gray-700">
                            <dt class="col-end-1 font-semibold text-gray-900">Phone</dt>
                            <dd>@(currentActive.PhoneNumber)</dd>
                            <dt class="col-end-1 font-semibold text-gray-900">Email</dt>
                            <dd class="truncate"><a href="#" class="text-indigo-600 underline">@(currentActive.Email)</a></dd>
                        </dl>
                        <button type="button" @onclick="(e) => selectUser(currentActive)" class="mt-6 w-full rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Select Employee</button>
                    </div>
                </div>
            }

        </div>

        <!-- Empty state, show/hide based on command palette state -->
        <div class="py-14 px-6 text-center text-sm sm:px-14 @(hasMadeSearch == true && filtered().Count() == 0 ? "" : "hidden")">
            <!-- Heroicon name: outline/users -->
            <svg class="mx-auto h-6 w-6 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
            </svg>
            <p class="mt-4 font-semibold text-gray-900">No people found</p>
            <p class="mt-2 text-gray-500">We couldn’t find anything with that term. Please try again.</p>
        </div>
    </div>

</div>

@code {

    public ApiAppUser? EmployeeSelection
    {
        get => selectedResult;
        set
        {
            if (selectedResult == value) return;

            selectedResult = value;
            OnEmployeeSelection.InvokeAsync(value);
        }
    }

    string searchTerm = "";


    [Parameter]
    public EventCallback<ApiAppUser> OnEmployeeSelection { get; set; }

    [Parameter]
    public List<ApiAppUser> Users { get; set; }

    [Parameter]
    public string ControlTitle { get; set; }

    ApiAppUser currentActive;

    IEnumerable<ApiAppUser> filtered()
    {
        if (searchTerm == null)
            return Users;
        return Users.Where(x => x.FirstName.Contains(searchTerm) ||
        x.LastName.Contains(searchTerm) ||
        x.Email.Contains(searchTerm));
    }

    ApiAppUser getCurrentActive()
    {
        var users = filtered();
        if (currentActive == null && users.Count() > 0)
            return users.First();
        return currentActive;
    }

    void hoverOnUser(ApiAppUser user)
    {
        currentActive = user;
    }

    private void onSearchTermChanged(KeyboardEventArgs args)
    {
        hasMadeSearch = true;
    }

    private void onSearchFocus(FocusEventArgs args)
    {
        hasMadeSearch = true;
    }

    void updateActive(ApiAppUser user)
    {
        currentActive = user;
    }

    void selectUser(ApiAppUser user)
    {
        EmployeeSelection = user;
    }

    async Task OnEmployeeClick(MouseEventArgs e)
    {
        selectUser(currentActive);
    }

    [Parameter]
    public ApiAppUser? selectedResult { get; set; }

    bool hasMadeSearch = false;


}
