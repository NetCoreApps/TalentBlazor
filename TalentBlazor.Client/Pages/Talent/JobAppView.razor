@page "/jobs/{JobId:int}/applications"
@inherits AppComponentBase

<SetHeader>
    <div class="flex-1 min-w-0">
        <nav class="flex" aria-label="Breadcrumb">
            @if (!loading)
            {
                <Breadcrumbs>
                    <Breadcrumb href="/jobs">Jobs</Breadcrumb>
                    <Breadcrumb href=@($"/jobs/{JobId}")>@job.Title</Breadcrumb>
                    <Breadcrumb href=@($"/jobs/{JobId}/applications")>Applications</Breadcrumb>
                </Breadcrumbs>
            }
        </nav>
        @if (loading)
        {
            <h1 class="mt-2 text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">Loading...</h1>
            <div class="mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-8">

            <div class="mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-8">
                <div class="mt-2 flex items-center text-sm text-gray-500">
                    <!-- Heroicon name: solid/briefcase -->
                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z" clip-rule="evenodd" />
                        <path d="M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z" />
                    </svg>
                    
                </div>
                <div class="mt-2 flex items-center text-sm text-gray-500">
                    <!-- Heroicon name: solid/location-marker -->
                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                    </svg>
                    
                </div>
                <div class="mt-2 flex items-center text-sm text-gray-500">
                    <!-- Heroicon name: solid/currency-dollar -->
                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z" />
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z" clip-rule="evenodd" />
                    </svg>
                    
                </div>
                <div class="mt-2 flex items-center text-sm text-gray-500">
                    <!-- Heroicon name: solid/calendar -->
                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                    </svg>
                   
                </div>
            </div>
        </div>           
        }
        else
        {
        <h1 class="mt-2 text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">@job.Title</h1>
        <div class="mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-8">

            <div class="mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-8">
                <div class="mt-2 flex items-center text-sm text-gray-500">
                    <!-- Heroicon name: solid/briefcase -->
                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z" clip-rule="evenodd" />
                        <path d="M2 13.692V16a2 2 0 002 2h12a2 2 0 002-2v-2.308A24.974 24.974 0 0110 15c-2.796 0-5.487-.46-8-1.308z" />
                    </svg>
                    @(employmentTypeMapping[job.EmploymentType])
                </div>
                <div class="mt-2 flex items-center text-sm text-gray-500">
                    <!-- Heroicon name: solid/location-marker -->
                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                    </svg>
                    @job.Location
                </div>
                <div class="mt-2 flex items-center text-sm text-gray-500">
                    <!-- Heroicon name: solid/currency-dollar -->
                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z" />
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z" clip-rule="evenodd" />
                    </svg>
                    $@(job.SalaryRangeLower / 1000)k &ndash; $@(job.SalaryRangeUpper/ 1000)k
                </div>
                <div class="mt-2 flex items-center text-sm text-gray-500">
                    <!-- Heroicon name: solid/calendar -->
                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                    </svg>
                    Closing on @job.Closing.ToString("d MMMM, yyyy")
                </div>
            </div>
        </div>           
        }

    </div>
    <div class="mt-5 flex xl:mt-0 xl:ml-4">
        <!-- Actions -->

        <span class="hidden sm:block">
            <a href="/jobs/@(job.Id)/edit" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-purple-500">
                <!-- Heroicon name: solid/pencil -->
                <svg class="-ml-1 mr-2 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                </svg>
                Edit
            </a>
        </span>

        <span class="hidden sm:block ml-3">
            <a href="/jobs/@(job.Id)" type="button" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-purple-500">
                <!-- Heroicon name: solid/link -->
                <svg class="-ml-1 mr-2 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule="evenodd" />
                </svg>
                View
            </a>
        </span>

        <!-- Dropdown -->
        <span class="ml-3 relative sm:hidden">
            <button type="button" @onclick="() => collapseEditViewMenu = !collapseEditViewMenu" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500" id="mobile-menu-button" aria-expanded="false" aria-haspopup="true">
                More
                <!-- Heroicon name: solid/chevron-down -->
                <svg class="-mr-1 ml-2 h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
            </button>

            <!--
              Dropdown menu, show/hide based on menu state.

              Entering: "transition ease-out duration-200"
                From: "transform opacity-0 scale-95"
                To: "transform opacity-100 scale-100"
              Leaving: "transition ease-in duration-75"
                From: "transform opacity-100 scale-100"
                To: "transform opacity-0 scale-95"
            -->
            <div class="@(collapseEditViewMenu == true ? "hidden" : "") origin-top-left absolute mt-2 -mr-1 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="mobile-menu-button" tabindex="-1">
                <!-- Active: "bg-gray-100", Not Active: "" -->
                <a href="/jobs/@(job.Id)/edit" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem" tabindex="-1" id="mobile-menu-item-0">Edit</a>
                <a href="/jobs/@(job.Id)" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem" tabindex="-1" id="mobile-menu-item-1">View</a>
            </div>
        </span>
    </div>
</SetHeader>

<h2 class="text-lg font-medium fw-normal text-gray-900">Candidates</h2>
<CascadingValue Value="errorStatus">
    <ErrorSummary />
</CascadingValue>
<!-- Tabs -->
<div class="sm:hidden">
    <label for="tabs" class="sr-only">Select a tab</label>
    <!-- Use an "onChange" listener to redirect the user to the selected tab URL. -->
    <select id="tabs" name="tabs" @bind="Filter" class="mt-4 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-purple-500 focus:border-purple-500 sm:text-sm rounded-md">
        <option value="@JobApplicationFilter.Applied">Applied</option>
        <option value="@JobApplicationFilter.PhoneScreening">Phone Screening</option>
        <option value="@JobApplicationFilter.Interview">Interview</option>
        <option value="@JobApplicationFilter.Offer">Offer</option>
        <option value="@JobApplicationFilter.Disqualified">Disqualified</option>
    </select>
</div>
<div class="hidden sm:block">
    <div class="border-b border-gray-200">
        <nav class="mt-2 -mb-px flex space-x-8" aria-label="Tabs">
            <!-- Current: "border-purple-500 text-purple-600", Default: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200" -->
            <a href="" @onclick="(e) => Filter = JobApplicationFilter.Applied" @onclick:preventDefault class="@(Filter == JobApplicationFilter.Applied ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                Applied

                <!-- Current: "bg-purple-100 text-purple-600", Default: "bg-gray-100 text-gray-900" -->
                <span class="hidden ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block @(Filter == JobApplicationFilter.Applied ? "bg-purple-100 text-purple-600" : "bg-gray-100 text-gray-900")">
                    @(ApplicationCount(JobApplicationStatus.Applied))
                </span>
            </a>

            <a href="" @onclick="(e) => Filter = JobApplicationFilter.PhoneScreening" @onclick:preventDefault class="@(Filter == JobApplicationFilter.PhoneScreening ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                Phone Screening

                <span class="hidden ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block @(Filter == JobApplicationFilter.PhoneScreening ? "bg-purple-100 text-purple-600" : "bg-gray-100 text-gray-900")">
                    @(PhoneApplicationCount())
                </span>
            </a>

            <a href="" @onclick="(e) => Filter = JobApplicationFilter.Interview" @onclick:preventDefault class="@(Filter == JobApplicationFilter.Interview ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                Interview

                <span class="hidden ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block @(Filter == JobApplicationFilter.Interview ? "bg-purple-100 text-purple-600" : "bg-gray-100 text-gray-900")">
                    @(InterviewApplicationCount())
                </span>
            </a>

            <a href="" @onclick="(e) => Filter = JobApplicationFilter.Offer" @onclick:preventDefault class="@(Filter == JobApplicationFilter.Offer ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                Offer
                <!-- Current: "bg-purple-100 text-purple-600", Default: "bg-gray-100 text-gray-900" -->
                <span class="hidden ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block @(Filter == JobApplicationFilter.Offer ? "bg-purple-100 text-purple-600" : "bg-gray-100 text-gray-900")">
                    @(ApplicationCount(JobApplicationStatus.Offer))
                </span>
            </a>

            <a href="" @onclick="(e) => Filter = JobApplicationFilter.Disqualified" @onclick:preventDefault class="@(Filter == JobApplicationFilter.Disqualified ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                Disqualified
                <span class="hidden ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block @(Filter == JobApplicationFilter.Disqualified ? "bg-purple-100 text-purple-600" : "bg-gray-100 text-gray-900")">
                    @(ApplicationCount(JobApplicationStatus.Disqualified))
                </span>
            </a>
        </nav>
    </div>
</div>


<!-- Stacked list -->
<div class="bg-white shadow overflow-hidden sm:rounded-md">
    <ul role="list" class="border-t px-6 border-gray-200 divide-y divide-gray-200 sm:mt-0 sm:border-t-0">
        @foreach (var jobApp in FilteredJobs().Skip((currentPage) * perPage).Take(perPage))
        {
            <li>
                <a href="/jobs/@(jobApp.JobId)/applications/@(jobApp.Id)" class="group block">
                    <div class="flex items-center py-5 px-4 sm:py-6 sm:px-0">
                        <div class="min-w-0 flex-1 flex items-center">
                            <div class="flex-shrink-0">
                                <img class="h-12 w-12 rounded-full group-hover:opacity-75" src="@(jobApp.Applicant.ProfileUrl)" alt="">
                            </div>
                            <div class="min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4">
                                <div>
                                    <p class="text-sm font-medium text-purple-600 truncate">@($"{jobApp.Applicant.FirstName} {jobApp.Applicant.LastName}")</p>
                                    <p class="mt-2 flex items-center text-sm text-gray-500">
                                        <!-- Heroicon name: solid/mail -->
                                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                            <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
                                            <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
                                        </svg>
                                        <span class="truncate">@(jobApp.Applicant.Email)</span>
                                    </p>
                                </div>
                                <div class="hidden md:block">
                                    <div>
                                        <p class="text-sm text-gray-900">
                                            Applied on @(jobApp.AppliedDate.ToString("MMMM dd, yyyy"))
                                        </p>
                                        <p class="mt-2 flex items-center text-sm text-gray-500">
                                            <!-- Heroicon name: solid/check-circle -->
                                        <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                                            </svg>
                                            @(jobAppStatusMapping[jobApp.ApplicationStatus])
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div>
                            <!-- Heroicon name: solid/chevron-right -->
                        <svg class="h-5 w-5 text-gray-400 group-hover:text-gray-700" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                            </svg>
                        </div>
                    </div>
                </a>
            </li>
        }
        <!-- More candidates... -->
    </ul>
</div>
<!-- Pagination -->
<nav class="border-t border-gray-200 px-4 py-2 flex items-center justify-between sm:px-0 @(NumberOfPages() > 1 ? "" : "hidden")" aria-label="Pagination">
    <div class="-mt-px w-0 flex-1 flex">
        <a href="" @onclick="(e) => currentPage = currentPage == 0 ? 0 : currentPage - 1" @onclick:preventDefault class="border-t-2 border-transparent pt-4 pr-1 inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-200">
            <!-- Heroicon name: solid/arrow-narrow-left -->
            <svg class="mr-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd" />
            </svg>
            Previous
        </a>
    </div>
    <div class="hidden md:-mt-px md:flex">
        @for (var i = 0; i < NumberOfPages(); i++)
        {
            var tempint = i;
            <a href="" @onclick="(e) => currentPage = tempint" @onclick:preventDefault class="@(tempint == currentPage ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium">@(i+1)</a>
        }

        <!-- Current: "border-purple-500 text-purple-600", Default: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200" -->

    </div>
    <div class="-mt-px w-0 flex-1 flex justify-end">
        <a href="" @onclick="(e) => currentPage = currentPage == NumberOfPages() - 1 ? currentPage : currentPage + 1" @onclick:preventDefault class="border-t-2 border-transparent pt-4 pl-1 inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-200">
            Next
            <!-- Heroicon name: solid/arrow-narrow-right -->
            <svg class="ml-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
        </a>
    </div>
</nav>


@code {
    List<JobApplication> jobApps = new();
    Job job = new();
    JobApplicationFilter filter = JobApplicationFilter.Interview;
    JobApplicationFilter Filter
    {
        get => filter;
        set
        {
            filter = value;
            currentPage = 0;
        }
    }
    int currentPage = 0;
    int perPage = 3;

    bool collapseEditViewMenu = true;

    bool loading = true;

    [Parameter]
    public int JobId { get; set; }

    ResponseStatus? errorStatus;

    int NumberOfPages()
    {
        var minPages = (int)Math.Floor((decimal)(FilteredJobs().Count() / perPage));
        var remainderPage = ((FilteredJobs().Count() % perPage > 0) ? 1 : 0);
        return minPages + remainderPage;
    }

    IEnumerable<JobApplication> FilteredJobs()
    {
        if (jobApps.Count == 0)
            return jobApps;
        return Filter switch {
            JobApplicationFilter.Applied => jobApps.Where(x => x.ApplicationStatus == JobApplicationStatus.Applied),
            JobApplicationFilter.PhoneScreening => jobApps.Where(x => x.ApplicationStatus is JobApplicationStatus.PhoneScreening or JobApplicationStatus.PhoneScreeningCompleted),
            JobApplicationFilter.Interview => jobApps.Where(x => x.ApplicationStatus is JobApplicationStatus.Interview or JobApplicationStatus.InterviewCompleted),
            JobApplicationFilter.Offer => jobApps.Where(x => x.ApplicationStatus == JobApplicationStatus.Offer),
            JobApplicationFilter.Disqualified => jobApps.Where(x => x.ApplicationStatus == JobApplicationStatus.Disqualified),
            _ => jobApps
        };
    }

    protected override async Task OnInitializedAsync()
    {
        await RefreshJobApps();
        startOnFilterWithJobs();
        loading = false;
    }

    // Make sure default filter has listed candidates
    void startOnFilterWithJobs()
    {
        var interview = jobApps.Any(x => x.ApplicationStatus == JobApplicationStatus.Interview);
        if (interview)
            return;
        var phone = jobApps.Any(x => x.ApplicationStatus == JobApplicationStatus.PhoneScreening || x.ApplicationStatus == JobApplicationStatus.PhoneScreeningCompleted);
        if(phone)
        {
            filter = JobApplicationFilter.PhoneScreening;
            return;
        }
        var applied = jobApps.Any(x => x.ApplicationStatus == JobApplicationStatus.Applied);
        if(applied)
        {
            filter = JobApplicationFilter.Applied;
            return;
        }
        var offer = jobApps.Any(x => x.ApplicationStatus == JobApplicationStatus.Offer);
        if(offer)
        {
            filter = JobApplicationFilter.Offer;
            return;
        }
    }

    int InterviewApplicationCount()
    {
        return jobApps.Count(x => x.ApplicationStatus is JobApplicationStatus.Interview or JobApplicationStatus.InterviewCompleted);
    }

    int PhoneApplicationCount()
    {
        return jobApps.Count(x => x.ApplicationStatus is JobApplicationStatus.PhoneScreening or JobApplicationStatus.PhoneScreeningCompleted);
    }

    int ApplicationCount(JobApplicationStatus status) => jobApps.Count(x => x.ApplicationStatus == status);

    async Task RefreshJobApps()
    {
        var api = await ApiAsync(new QueryJob {
            Id = JobId
        });
        var jobAppsApi = await ApiAsync(new QueryJobApplication {
            JobId = JobId
        });
        if (api.Succeeded)
            job = api.Response!.Results[0];
        else
            errorStatus = api.Error;

        if (jobAppsApi.Succeeded)
            jobApps = jobAppsApi.Response!.Results;
        else
            errorStatus = api.Error;
    }

    readonly Dictionary<JobApplicationStatus, string> jobAppStatusMapping = new() {
        { JobApplicationStatus.Applied, "Applied" },
        { JobApplicationStatus.Interview, "Interview" },
        { JobApplicationStatus.InterviewCompleted, "Interview Completed" },
        { JobApplicationStatus.PhoneScreening, "Phone Screening" },
        { JobApplicationStatus.PhoneScreeningCompleted, "Phone Screening Completed" },
        { JobApplicationStatus.Offer, "Offer" },
        { JobApplicationStatus.Disqualified, "Disqualified" }
    };

    readonly Dictionary<EmploymentType, string> employmentTypeMapping = new() {
        { EmploymentType.FullTime, "Full-time" },
        { EmploymentType.PartTime, "Part-time" },
        { EmploymentType.Contract, "Contract" },
        { EmploymentType.Casual, "Casual" }
    };

    enum JobApplicationFilter
    {
        Applied,
        PhoneScreening,
        Interview,
        Offer,
        Disqualified
    }
}
