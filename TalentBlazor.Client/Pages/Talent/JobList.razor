@page "/jobs"
@inherits AppComponentBase
@inject StateContainer stateContainer;
@inject BreadCrumbStateContainer breadCrumbState;


<!-- This example requires Tailwind CSS v2.0+ -->
<div class="bg-white overflow-hidden rounded-lg">
    <header class="px-4 py-2 sm:px-6">

        <!-- Content goes here -->
        <div class="bg-white px-4 py-2 border-b border-gray-200 sm:px-6">
            <div class="-ml-4 -mt-4 flex justify-between items-center flex-wrap sm:flex-nowrap">
                <div class="ml-4 mt-4">
                    <h3 class="text-lg leading-6 font-medium text-gray-900">Job Postings</h3>
                    <p class="mt-1 text-sm text-gray-500">Lorem ipsum dolor sit amet consectetur adipisicing elit quam corrupti consectetur.</p>
                </div>
                <div class="ml-4 mt-4 flex-shrink-0">
                    <button type="button" class="relative inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Create new job</button>
                </div>
            </div>
        </div>
    </header>
    <main class="px-4 py-2 sm:p-6">
                <!-- Tabs -->
        <div class="sm:hidden">
            <label for="tabs" class="sr-only">Select a tab</label>
            <!-- Use an "onChange" listener to redirect the user to the selected tab URL. -->
            <select id="tabs" name="tabs" @bind="filter" class="mt-4 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-purple-500 focus:border-purple-500 sm:text-sm rounded-md">
                <option value="@EmployementType.FullTime">Full-time</option>

                <option value="@EmployementType.PartTime">Part-time</option>

                <option value="@EmployementType.Contract">Contract</option>

                <option value="@EmployementType.Casual">Casual</option>
            </select>
        </div>
        <div class="hidden sm:block">
            <div class="border-b border-gray-200">
                <nav class="mt-2 -mb-px flex space-x-8" aria-label="Tabs">
                    <!-- Current: "border-purple-500 text-purple-600", Default: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200" -->
                    <a href="" @onclick="(e) => changeFilter(EmployementType.FullTime)" @onclick:preventDefault class="@(filter == EmployementType.FullTime ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                        Full-time

                        <!-- Current: "bg-purple-100 text-purple-600", Default: "bg-gray-100 text-gray-900" -->
                        <span class="hidden ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block @(filter == EmployementType.FullTime ? "bg-purple-100 text-purple-600" : "bg-gray-100 text-gray-900")">
                            @(jobCount(EmployementType.FullTime))
                        </span>
                    </a>

                    <a href="" @onclick="(e) => changeFilter(EmployementType.PartTime)" @onclick:preventDefault class="@(filter == EmployementType.PartTime ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                        Part-time

                        <span class="hidden ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block @(filter == EmployementType.PartTime ? "bg-purple-100 text-purple-600" : "bg-gray-100 text-gray-900")">
                            @(jobCount(EmployementType.PartTime))
                        </span>
                    </a>

                    <a href="" @onclick="(e) => changeFilter(EmployementType.Contract)" @onclick:preventDefault class="@(filter == EmployementType.Contract ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                        Contract

                        <span class="hidden ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block @(filter == EmployementType.Contract ? "bg-purple-100 text-purple-600" : "bg-gray-100 text-gray-900")">
                            @(jobCount(EmployementType.Contract))
                        </span>
                    </a>

                    <a href="" @onclick="(e) => changeFilter(EmployementType.Casual)" @onclick:preventDefault class="@(filter == EmployementType.Casual ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
                        Casual
                        <!-- Current: "bg-purple-100 text-purple-600", Default: "bg-gray-100 text-gray-900" -->
                        <span class="hidden ml-2 py-0.5 px-2.5 rounded-full text-xs font-medium md:inline-block @(filter == EmployementType.Casual ? "bg-purple-100 text-purple-600" : "bg-gray-100 text-gray-900")">
                            @(jobCount(EmployementType.Casual))
                        </span>
                    </a>
                </nav>
            </div>
        </div>
        <!-- This example requires Tailwind CSS v2.0+ -->
        <div class="bg-white shadow overflow-hidden sm:rounded-md">
            <ul role="list" class="divide-y divide-gray-200">
                @foreach (var job in jobs.Where(x => x.EmployementType == filter).Skip((currentPage) * perPage).Take(perPage))
                {
                    <li>
                        <a href="/jobs/@(job.Id)/applications" class="block hover:bg-gray-50">
                            <div class="px-4 py-4 sm:px-6">
                                <div class="flex items-center justify-between">
                                    <p class="text-sm font-medium text-indigo-600 truncate">@job.Title</p>
                                    <div class="ml-2 flex-shrink-0 flex">
                                        <p class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">@(employmentTypeMapping[job.EmployementType])</p>
                                    </div>
                                </div>
                                <div class="mt-2 sm:flex sm:justify-between">
                                    <div class="sm:flex">
                                        <p class="flex items-center text-sm text-gray-500">
                                            <!-- Heroicon name: solid/users -->
                                        <svg class="text-gray-400 group-hover:text-gray-500 -ml-0.5 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h8a2 2 0 012 2v12a1 1 0 110 2h-3a1 1 0 01-1-1v-2a1 1 0 00-1-1H9a1 1 0 00-1 1v2a1 1 0 01-1 1H4a1 1 0 110-2V4zm3 1h2v2H7V5zm2 4H7v2h2V9zm2-4h2v2h-2V5zm2 4h-2v2h2V9z" clip-rule="evenodd" />
                                            </svg>
                                            @job.Company
                                        </p>
                                        <p class="flex items-center text-sm text-gray-500 sm:mt-0 sm:ml-6">
                                            <!-- Heroicon name: solid/location-marker -->
                                        <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                                            </svg>
                                            @job.Location
                                        </p>
                                    </div>
                                    <div class="flex items-center text-sm text-gray-500 sm:mt-0">
                                        <!-- Heroicon name: solid/calendar -->
                                    <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                                        </svg>
                                        <p>
                                            Closing on
                                            <time datetime="@job.Closing.ToString("yyyy-MM-dd")">@job.Closing.ToString("d MMMM, yyyy")</time>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </li>
                }

            </ul>
        </div>
        <!-- This example requires Tailwind CSS v2.0+ -->
        <!-- Pagination -->
        <nav class="border-t border-gray-200 px-4 flex items-center justify-between sm:px-0" aria-label="Pagination">
            <div class="-mt-px w-0 flex-1 flex">
                <a href="" @onclick="(e) => currentPage = currentPage == 0 ? 0 : currentPage - 1" @onclick:preventDefault class="border-t-2 border-transparent pt-4 pr-1 inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-200">
                    <!-- Heroicon name: solid/arrow-narrow-left -->
                    <svg class="mr-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                    </svg>
                    Previous
                </a>
            </div>
            <div class="hidden md:-mt-px md:flex">
                @for (var i = 0; i < numberOfPages(); i++)
                {
                    var tempint = i;
                    <a href="" @onclick="(e) => currentPage = tempint" @onclick:preventDefault class="@(tempint == currentPage ? "border-purple-500 text-purple-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200") border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium">@(i+1)</a>
                }

                <!-- Current: "border-purple-500 text-purple-600", Default: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-200" -->

            </div>
            <div class="-mt-px w-0 flex-1 flex justify-end">
                <a href="" @onclick="(e) => currentPage = currentPage == numberOfPages() - 1 ? currentPage : currentPage + 1" @onclick:preventDefault class="border-t-2 border-transparent pt-4 pl-1 inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-200">
                    Next
                    <!-- Heroicon name: solid/arrow-narrow-right -->
                    <svg class="ml-3 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                </a>
            </div>
        </nav>
    </main>
    <footer class="px-4 py-4 sm:px-6">
        <!-- Content goes here -->
        <!-- This example requires Tailwind CSS v2.0+ -->
        <footer class="bg-white">
            <div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 md:flex md:items-center md:justify-between lg:px-8">
                <div class="flex justify-center space-x-6 md:order-2">
                    <a href="#" class="text-gray-400 hover:text-gray-500">
                        <span class="sr-only">Facebook</span>
                        <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path fill-rule="evenodd" d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z" clip-rule="evenodd" />
                        </svg>
                    </a>

                    <a href="#" class="text-gray-400 hover:text-gray-500">
                        <span class="sr-only">Instagram</span>
                        <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z" clip-rule="evenodd" />
                        </svg>
                    </a>

                    <a href="#" class="text-gray-400 hover:text-gray-500">
                        <span class="sr-only">Twitter</span>
                        <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84" />
                        </svg>
                    </a>

                    <a href="#" class="text-gray-400 hover:text-gray-500">
                        <span class="sr-only">GitHub</span>
                        <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd" />
                        </svg>
                    </a>

                    <a href="#" class="text-gray-400 hover:text-gray-500">
                        <span class="sr-only">Dribbble</span>
                        <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10c5.51 0 10-4.48 10-10S17.51 2 12 2zm6.605 4.61a8.502 8.502 0 011.93 5.314c-.281-.054-3.101-.629-5.943-.271-.065-.141-.12-.293-.184-.445a25.416 25.416 0 00-.564-1.236c3.145-1.28 4.577-3.124 4.761-3.362zM12 3.475c2.17 0 4.154.813 5.662 2.148-.152.216-1.443 1.941-4.48 3.08-1.399-2.57-2.95-4.675-3.189-5A8.687 8.687 0 0112 3.475zm-3.633.803a53.896 53.896 0 013.167 4.935c-3.992 1.063-7.517 1.04-7.896 1.04a8.581 8.581 0 014.729-5.975zM3.453 12.01v-.26c.37.01 4.512.065 8.775-1.215.25.477.477.965.694 1.453-.109.033-.228.065-.336.098-4.404 1.42-6.747 5.303-6.942 5.629a8.522 8.522 0 01-2.19-5.705zM12 20.547a8.482 8.482 0 01-5.239-1.8c.152-.315 1.888-3.656 6.703-5.337.022-.01.033-.01.054-.022a35.318 35.318 0 011.823 6.475 8.4 8.4 0 01-3.341.684zm4.761-1.465c-.086-.52-.542-3.015-1.659-6.084 2.679-.423 5.022.271 5.314.369a8.468 8.468 0 01-3.655 5.715z" clip-rule="evenodd" />
                        </svg>
                    </a>
                </div>
                <div class="mt-8 md:mt-0 md:order-1">
                    <p class="text-center text-base text-gray-400">&copy; 2020 Workflow, Inc. All rights reserved.</p>
                </div>
            </div>
        </footer>
    </footer>
</div>

@code {
    List<Job> jobs = new();
    ResponseStatus? errorStatus;
    int currentPage = 0;
    int perPage = 5;

    Dictionary<EmployementType, string> employmentTypeMapping = new()
        {
            { EmployementType.FullTime, "Full-time" },
            { EmployementType.PartTime, "Part-time" },
            { EmployementType.Contract, "Contract" },
            { EmployementType.Casual, "Casual" }
        };

    EmployementType filter = EmployementType.FullTime;

    int jobCount(EmployementType employementType)
    {
        return jobs.Count(x => x.EmployementType == employementType);
    }

    void changeFilter(EmployementType newFilter)
    {
        filter = newFilter;
        var jobNum = jobCount(filter);
        currentPage = 0;
    }

    IEnumerable<Job> filteredJobs()
    {
        switch (filter)
        {
            case EmployementType.FullTime:
                return jobs.Where(x => x.EmployementType == EmployementType.FullTime);
            case EmployementType.PartTime:
                return jobs.Where(x => x.EmployementType == EmployementType.PartTime);
            case EmployementType.Contract:
                return jobs.Where(x => x.EmployementType == EmployementType.Contract);
            case EmployementType.Casual:
                return jobs.Where(x => x.EmployementType == EmployementType.Casual);
        }
        return jobs;
    }

    int numberOfPages()
    {
        var minPages = (int)Math.Floor((decimal)(jobs.Count(x => x.EmployementType == filter) / perPage));
        var remainderPage = ((jobs.Count(x => x.EmployementType == filter) % perPage > 0) ? 1 : 0);
        return minPages + remainderPage;
    }

    protected override Task OnParametersSetAsync()
    {
        breadCrumbState.BreadCrumbs = new List<BreadCrumb>
        {
            new BreadCrumb{ Name = "Jobs", Url = "/jobs"}
        };
        return base.OnParametersSetAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        await refreshJobs();
    }

    async Task refreshJobs()
    {
        var api = await ApiAsync(new QueryJob());

        if (api.Succeeded)
            jobs = api.Response!.Results;
        else
            errorStatus = api.Error;
    }
}
