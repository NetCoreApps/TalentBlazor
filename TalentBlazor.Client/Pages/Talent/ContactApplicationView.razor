@page "/jobs/{JobId:int}/applications/{JobAppId:int}"
@inherits AppComponentBase
@inject BreadCrumbStateContainer breadCrumbs;

<div class="bg-gray-50 overflow-hidden rounded-lg">
    <header class="px-4 py-2 sm:px-6 bg-gray-50">
    </header>
    <main class="py-10">
        <!-- Page header -->
        <div class="max-w-3xl mx-auto px-4 sm:px-6 md:flex md:items-center md:justify-between md:space-x-5 lg:max-w-7xl lg:px-8">
            <div class="flex items-center space-x-5">
                <div class="flex-shrink-0">
                    <div class="relative">
                        <img class="h-16 w-16 rounded-full" src="@(jobApp.Applicant?.ProfileUrl)" alt="">
                        <span class="absolute inset-0 shadow-inner rounded-full" aria-hidden="true"></span>
                    </div>
                </div>
                <div>
                    <h1 class="text-2xl font-bold text-gray-900">@(jobApp.Applicant?.DisplayName)</h1>
                    <p class="text-sm font-medium text-gray-500">Applied for <a href="#" class="text-gray-900">@(jobApp.Position?.Title)</a> on <time datetime="@(jobApp.AppliedDate.ToString("yyyy-MM-dd"))">@(jobApp.AppliedDate.ToString("MMMM d, yyyy"))</time></p>
                </div>
            </div>
            <div class="mt-6 flex flex-col-reverse justify-stretch space-y-4 space-y-reverse sm:flex-row-reverse sm:justify-end sm:space-x-reverse sm:space-y-0 sm:space-x-3 md:mt-0 md:flex-row md:space-x-3">
                <button type="button" class="inline-flex items-center justify-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Disqualify</button>
                @switch (jobApp.ApplicationStatus)
                {
                    case JobApplicationStatus.Applied:
                        <button type="button" @onclick="() => showAdvancePhoneScreen = true" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[jobApp.ApplicationStatus + 1]</button>
                        break;
                    case JobApplicationStatus.PhoneScreening:
                        <button type="button" @onclick="() => showCompletePhoneScreen = true" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[jobApp.ApplicationStatus + 1]</button>
                        break;
                    case JobApplicationStatus.PhoneScreeningCompleted:
                        <button type="button" @onclick="() => showBookInterview = true" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[jobApp.ApplicationStatus + 1]</button>
                        break;
                    case JobApplicationStatus.Interview:
                        <button type="button" @onclick="() => showCompleteInterview = true" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[jobApp.ApplicationStatus + 1]</button>
                        break;
                    case JobApplicationStatus.InterviewCompleted:
                        <button type="button" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[jobApp.ApplicationStatus + 1]</button>
                        break;
                    case JobApplicationStatus.Offer:
                        <button type="button" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-red-500">Recind Offer</button>
                        break;
                    case JobApplicationStatus.Disqualified:
                        break;
                    default:
                        break;
                }

            </div>
        </div>

        <div class="mt-8 max-w-3xl mx-auto grid grid-cols-1 gap-6 sm:px-6 lg:max-w-7xl lg:grid-flow-col-dense lg:grid-cols-3">
            <div class="space-y-6 lg:col-start-1 lg:col-span-2">
                <!-- Description list-->
                <section aria-labelledby="applicant-information-title">
                    <div class="bg-white shadow sm:rounded-lg">
                        <div class="px-4 py-5 sm:px-6">
                            <h2 id="applicant-information-title" class="text-lg leading-6 font-medium text-gray-900">Applicant Information</h2>
                            <p class="mt-1 max-w-2xl text-sm text-gray-500">Personal details and application.</p>
                        </div>
                        <div class="border-t border-gray-200 px-4 py-5 sm:px-6">
                            <dl class="grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2">
                                <div class="sm:col-span-1">
                                <dt class="text-sm font-medium text-gray-500">Application for</dt>
                                <dd class="mt-1 text-sm text-gray-900">@(jobApp.Position?.Title)</dd>
                        </div>
                        <div class="sm:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Email address</dt>
                            <dd class="mt-1 text-sm text-gray-900">@(jobApp.Applicant?.Email)</dd>
                        </div>
                        <div class="sm:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Salary expectation</dt>
                            <dd class="mt-1 text-sm text-gray-900">$@(jobApp.Applicant?.SalaryExpectation / 1000)k</dd>
                        </div>
                        <div class="sm:col-span-1">
                            <dt class="text-sm font-medium text-gray-500">Phone</dt>
                            <dd class="mt-1 text-sm text-gray-900">@(jobApp.Applicant?.Phone)</dd>
                        </div>
                        <div class="sm:col-span-2">
                            <dt class="text-sm font-medium text-gray-500">About</dt>
                            <dd class="mt-1 text-sm text-gray-900">@(jobApp.Applicant?.About)</dd>
                        </div>
                        <div class="sm:col-span-2">
                            <dt class="text-sm font-medium text-gray-500">Attachments (TODO)</dt>
                            <dd class="mt-1 text-sm text-gray-900">
                                <ul role="list" class="border border-gray-200 rounded-md divide-y divide-gray-200">
                                    <li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm">
                                        <div class="w-0 flex-1 flex items-center">
                                            <!-- Heroicon name: solid/paper-clip -->
                                            <svg class="flex-shrink-0 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd" />
                                            </svg>
                                            <span class="ml-2 flex-1 w-0 truncate"> resume_front_end_developer.pdf </span>
                                        </div>
                                        <div class="ml-4 flex-shrink-0">
                                            <a href="#" class="font-medium text-blue-600 hover:text-blue-500"> Download </a>
                                        </div>
                                    </li>

                                    <li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm">
                                        <div class="w-0 flex-1 flex items-center">
                                            <!-- Heroicon name: solid/paper-clip -->
                                            <svg class="flex-shrink-0 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd" />
                                            </svg>
                                            <span class="ml-2 flex-1 w-0 truncate"> coverletter_front_end_developer.pdf </span>
                                        </div>
                                        <div class="ml-4 flex-shrink-0">
                                            <a href="#" class="font-medium text-blue-600 hover:text-blue-500"> Download </a>
                                        </div>
                                    </li>
                                </ul>
                            </dd>
                        </div>
                        </dl>
                    </div>
            </div>
            </section>

            <!-- Comments-->
            <section aria-labelledby="notes-title">
                <div class="bg-white shadow sm:rounded-lg sm:overflow-hidden">
                    <div class="divide-y divide-gray-200">
                        <div class="px-4 py-2 sm:px-6">
                            <h2 id="notes-title" class="text-lg font-medium text-gray-900">Notes (TODO)</h2>
                        </div>
                        <div class="px-4 py-6 sm:px-6">
                            <ul role="list" class="space-y-8">
                                <li>
                                    <div class="flex space-x-3">
                                        <div class="flex-shrink-0">
                                            <img class="h-10 w-10 rounded-full" src="https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="">
                                        </div>
                                        <div>
                                            <div class="text-sm">
                                                <a href="#" class="font-medium text-gray-900">Leslie Alexander</a>
                                            </div>
                                            <div class="mt-1 text-sm text-gray-700">
                                                <p>Ducimus quas delectus ad maxime totam doloribus reiciendis ex. Tempore dolorem maiores. Similique voluptatibus tempore non ut.</p>
                                            </div>
                                            <div class="mt-2 text-sm space-x-2">
                                                <span class="text-gray-500 font-medium">4d ago</span>
                                                <span class="text-gray-500 font-medium">&middot;</span>
                                                <button type="button" class="text-gray-900 font-medium">Reply</button>
                                            </div>
                                        </div>
                                    </div>
                                </li>

                                <li>
                                    <div class="flex space-x-3">
                                        <div class="flex-shrink-0">
                                            <img class="h-10 w-10 rounded-full" src="https://images.unsplash.com/photo-1519244703995-f4e0f30006d5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="">
                                        </div>
                                        <div>
                                            <div class="text-sm">
                                                <a href="#" class="font-medium text-gray-900">Michael Foster</a>
                                            </div>
                                            <div class="mt-1 text-sm text-gray-700">
                                                <p>Et ut autem. Voluptatem eum dolores sint necessitatibus quos. Quis eum qui dolorem accusantium voluptas voluptatem ipsum. Quo facere iusto quia accusamus veniam id explicabo et aut.</p>
                                            </div>
                                            <div class="mt-2 text-sm space-x-2">
                                                <span class="text-gray-500 font-medium">4d ago</span>
                                                <span class="text-gray-500 font-medium">&middot;</span>
                                                <button type="button" class="text-gray-900 font-medium">Reply</button>
                                            </div>
                                        </div>
                                    </div>
                                </li>

                                <li>
                                    <div class="flex space-x-3">
                                        <div class="flex-shrink-0">
                                            <img class="h-10 w-10 rounded-full" src="https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="">
                                        </div>
                                        <div>
                                            <div class="text-sm">
                                                <a href="#" class="font-medium text-gray-900">Dries Vincent</a>
                                            </div>
                                            <div class="mt-1 text-sm text-gray-700">
                                                <p>Expedita consequatur sit ea voluptas quo ipsam recusandae. Ab sint et voluptatem repudiandae voluptatem et eveniet. Nihil quas consequatur autem. Perferendis rerum et.</p>
                                            </div>
                                            <div class="mt-2 text-sm space-x-2">
                                                <span class="text-gray-500 font-medium">4d ago</span>
                                                <span class="text-gray-500 font-medium">&middot;</span>
                                                <button type="button" class="text-gray-900 font-medium">Reply</button>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="bg-gray-50 px-4 py-6 sm:px-6">
                        <div class="flex space-x-3">
                            <div class="flex-shrink-0">
                                <img class="h-10 w-10 rounded-full" src="https://images.unsplash.com/photo-1517365830460-955ce3ccd263?ixlib=rb-=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=8&w=256&h=256&q=80" alt="">
                            </div>
                            <div class="min-w-0 flex-1">
                                <form action="#">
                                    <div>
                                        <label for="comment" class="sr-only">About</label>
                                        <textarea id="comment" name="comment" rows="3" class="shadow-sm block w-full focus:ring-blue-500 focus:border-blue-500 sm:text-sm border border-gray-300 rounded-md" placeholder="Add a note"></textarea>
                                    </div>
                                    <div class="mt-3 flex items-center justify-between">
                                        <a href="#" class="group inline-flex items-start text-sm space-x-2 text-gray-500 hover:text-gray-900">
                                            <!-- Heroicon name: solid/question-mark-circle -->
                                            <svg class="flex-shrink-0 h-5 w-5 text-gray-400 group-hover:text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
                                            </svg>
                                            <span> Some HTML is okay. </span>
                                        </a>
                                        <button type="submit" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">Comment</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        <section aria-labelledby="timeline-title" class="lg:col-start-3 lg:col-span-1">
            <div class="bg-white px-4 py-5 shadow sm:rounded-lg sm:px-6">
                <h2 id="timeline-title" class="text-lg font-medium text-gray-900">Timeline</h2>

                <!-- Activity Feed -->
                <div class="mt-6 flow-root">
                    <ul role="list" class="-mb-8">

                            @foreach (var e in jobAppEvents.OrderBy(x => x.EventDate))
                            {
                            <li>
                                <div class="relative pb-8">
                                        @if (jobApp.Events.OrderBy(x => x.EventDate).Last().Id != e.Id)
                                        {
                                        <span class="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"></span>
                                        }

                                    <div class="relative flex space-x-3">
                                        <div>
                                                @switch (e.Status)
                                                {
                                                    case JobApplicationStatus.Applied:
                                                    <span class="h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white">
                                                        <!-- Heroicon name: solid/user -->
                                            <span class="oi oi-person text-white"></span>
                                                    </span>
                                                        break;
                                                    case JobApplicationStatus.PhoneScreening:
                                                    <span class="h-8 w-8 rounded-full bg-blue-500 flex items-center justify-center ring-8 ring-white">
                                                        <!-- Heroicon name: solid/user -->
                                            <span class="oi oi-thumb-up text-white pb-1 pl-1"></span>
                                                    </span>
                                                        break;
                                                    case JobApplicationStatus.PhoneScreeningCompleted:
                                                    <span class="h-8 w-8 rounded-full bg-green-500 flex items-center justify-center ring-8 ring-white">
                                                        <!-- Heroicon name: solid/user -->
                                            <span class="oi oi-check text-white"></span>
                                                    </span>
                                                        break;
                                                    case JobApplicationStatus.Interview:
                                                    <span class="h-8 w-8 rounded-full bg-blue-500 flex items-center justify-center ring-8 ring-white">
                                                        <!-- Heroicon name: solid/user -->
                                            <span class="oi oi-thumb-up text-white pb-1 pl-1"></span>
                                                    </span>
                                                        break;
                                                    case JobApplicationStatus.InterviewCompleted:
                                                    <span class="h-8 w-8 rounded-full bg-green-500 flex items-center justify-center ring-8 ring-white">
                                                        <!-- Heroicon name: solid/user -->
                                            <span class="oi oi-check text-white  pb-1 pl-1"></span>
                                                    </span>
                                                        break;
                                                    case JobApplicationStatus.Disqualified:
                                                    <span class="h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-red">
                                                        <!-- Heroicon name: solid/user -->
                                            <span class="oi oi-x text-white"></span>
                                                    </span>
                                                        break;
                                                }

                                        </div>
                                        <div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4">
                                            <div>
                                                    @switch (e.Status)
                                                    {
                                                        case JobApplicationStatus.Applied:
                                                        <p class="text-sm text-gray-500">@(e.Description) to <a href="/jobs/@jobApp.JobId" class="font-medium text-gray-900">@jobApp.Position?.Title</a></p>
                                                            break;
                                                        case JobApplicationStatus.PhoneScreening:
                                                        <p class="text-sm text-gray-500">@(e.Description) with <a href="/jobs/@jobApp.JobId" class="font-medium text-gray-900"></a>@(e.AppUser?.DisplayName)</p>
                                                            break;
                                                        case JobApplicationStatus.PhoneScreeningCompleted:
                                                        <p class="text-sm text-gray-500">@(e.Description) with <a href="/jobs/@jobApp.JobId" class="font-medium text-gray-900">@(e.AppUser?.DisplayName)</a></p>
                                                            break;
                                                        case JobApplicationStatus.Interview:
                                                        <p class="text-sm text-gray-500">@(e.Description) with <a href="/jobs/@jobApp.JobId" class="font-medium text-gray-900">@(e.AppUser?.DisplayName)</a></p>
                                                            break;
                                                        case JobApplicationStatus.InterviewCompleted:
                                                        <p class="text-sm text-gray-500">@(e.Description) with <a href="/jobs/@jobApp.JobId" class="font-medium text-gray-900">@(e.AppUser?.DisplayName)</a></p>
                                                            break;
                                                        case JobApplicationStatus.Disqualified:
                                                        <p class="text-sm text-gray-500">@(e.Description) by <a href="/jobs/@jobApp.JobId" class="font-medium text-gray-900">@(e.AppUser?.DisplayName)</a></p>
                                                            break;
                                                    }

                                            </div>
                                            <div class="text-right text-sm whitespace-nowrap text-gray-500">
                                                <time datetime="@e?.EventDate.ToString("yyyy-MM-dd")">@e?.EventDate.ToString("MMM d")</time>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                            }


                    </ul>
                </div>
                <div class="mt-6 flex flex-col justify-stretch">
                        @switch (jobApp.ApplicationStatus)
                        {
                            case JobApplicationStatus.Applied:
                            <button type="button" @onclick="(e) => showAdvancePhoneScreen = true" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[jobApp.ApplicationStatus + 1]</button>
                                break;
                            case JobApplicationStatus.PhoneScreening:
                            <button type="button" @onclick="(e) => showCompletePhoneScreen = true" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[jobApp.ApplicationStatus + 1]</button>
                                break;
                            case JobApplicationStatus.PhoneScreeningCompleted:
                            <button type="button" @onclick="(e) => showBookInterview = true" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[jobApp.ApplicationStatus + 1]</button>
                                break;
                            case JobApplicationStatus.Interview:
                            <button type="button" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[jobApp.ApplicationStatus + 1]</button>
                                break;
                            case JobApplicationStatus.InterviewCompleted:
                            <button type="button" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-blue-500">Advance to @jobAppStatusMapping[jobApp.ApplicationStatus + 1]</button>
                                break;
                            case JobApplicationStatus.Offer:
                            <button type="button" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-red-500">Recind Offer</button>
                                break;
                            case JobApplicationStatus.Disqualified:
                                break;
                            default:
                                break;
                        }

                </div>
            </div>
        </section>
</div>
</main>

<!-- Advance phonescreen -->
<div class="fixed z-10 inset-0 overflow-y-auto @(showAdvancePhoneScreen == false ? "hidden" : "")" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <!--
        Background overlay, show/hide based on modal state.

        Entering: "ease-out duration-300"
        From: "opacity-0"
        To: "opacity-100"
        Leaving: "ease-in duration-200"
        From: "opacity-100"
        To: "opacity-0"
        -->
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

        <!-- This element is to trick the browser into centering the modal contents. -->
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

        <!--
        Modal panel, show/hide based on modal state.

        Entering: "ease-out duration-300"
        From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        To: "opacity-100 translate-y-0 sm:scale-100"
        Leaving: "ease-in duration-200"
        From: "opacity-100 translate-y-0 sm:scale-100"
        To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        -->
        <div class="inline-block bg-white rounded-lg px-4 pt-2 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-xl sm:w-full sm:p-6 lg:max-w-3xl">
            <div class="bg-white py-5 sm:rounded-lg sm:p-6">
                <div class="md:grid md:grid-cols-3 md:gap-6">
                    <div class="md:col-span-1">
                        <h3 class="text-lg font-medium leading-6 text-gray-900">Progress to Phone Screen</h3>
                        <p class="mt-1 text-sm text-gray-500">The candidate will need an employee to perform a phone screening before proceeding.</p>
                    </div>
                    <div class="md:mt-0 md:col-span-2">
                        <form class="space-y-6" @onsubmit:preventDefault>
                            <div>
                                <div class="mt-1">
                                    <EmployeeLookup Users="apiAppUsers" OnEmployeeSelection="OnEmployeeSelectionChanged" ControlTitle="Phone Screener"></EmployeeLookup>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="pt-8 flex justify-end">
                <button type="button" @onclick="() => showAdvancePhoneScreen = false" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-blue-gray-900 hover:bg-blue-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">Cancel</button>
                <button type="button" @onclick="async () => await submitPhoneScreenBooking()" class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Advance phonescreen completed -->
<div class="fixed z-10 inset-0 overflow-y-auto @(showCompletePhoneScreen == false ? "hidden" : "")" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <!--
        Background overlay, show/hide based on modal state.

        Entering: "ease-out duration-300"
        From: "opacity-0"
        To: "opacity-100"
        Leaving: "ease-in duration-200"
        From: "opacity-100"
        To: "opacity-0"
        -->
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

        <!-- This element is to trick the browser into centering the modal contents. -->
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

        <!--
        Modal panel, show/hide based on modal state.

        Entering: "ease-out duration-300"
        From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        To: "opacity-100 translate-y-0 sm:scale-100"
        Leaving: "ease-in duration-200"
        From: "opacity-100 translate-y-0 sm:scale-100"
        To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        -->
        <div class="inline-block bg-white rounded-lg px-4 pt-2 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-xl sm:w-full sm:p-6 lg:max-w-3xl">
            <div class="bg-white py-5 sm:rounded-lg sm:p-6">
                <div class="md:grid md:grid-cols-3 md:gap-6">
                    <div class="md:col-span-1">
                        <h3 class="text-lg font-medium leading-6 text-gray-900">Progress to Phone Screen</h3>
                        <p class="mt-1 text-sm text-gray-500">The candidate will need an employee to perform a phone screening before proceeding.</p>
                    </div>
                    <div class="md:mt-0 md:col-span-2">
                        <form class="space-y-6" @onsubmit:preventDefault>
                            <div>
                                <div class="mt-1">
                                    <EmployeeLookup Users="apiAppUsers" OnEmployeeSelection="OnEmployeeSelectionChanged" ControlTitle="Phone Screen Completed By"></EmployeeLookup>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="pt-8 flex justify-end">
                <button type="button" @onclick="() => showCompletePhoneScreen = false" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-blue-gray-900 hover:bg-blue-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">Cancel</button>
                <button type="button" @onclick="async () => await submitPhoneScreenCompleted()" class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Book interview -->
<div class="fixed z-10 inset-0 overflow-y-auto @(showBookInterview == false ? "hidden" : "")" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <!--
        Background overlay, show/hide based on modal state.

        Entering: "ease-out duration-300"
        From: "opacity-0"
        To: "opacity-100"
        Leaving: "ease-in duration-200"
        From: "opacity-100"
        To: "opacity-0"
        -->
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

        <!-- This element is to trick the browser into centering the modal contents. -->
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

        <!--
        Modal panel, show/hide based on modal state.

        Entering: "ease-out duration-300"
        From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        To: "opacity-100 translate-y-0 sm:scale-100"
        Leaving: "ease-in duration-200"
        From: "opacity-100 translate-y-0 sm:scale-100"
        To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        -->
        <div class="inline-block bg-white rounded-lg px-4 pt-2 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-xl sm:w-full sm:p-6 lg:max-w-3xl">
            <div class="bg-white py-5 sm:rounded-lg sm:p-6">
                <div class="md:grid md:grid-cols-3 md:gap-6">
                    <div class="md:col-span-1">
                        <h3 class="text-lg font-medium leading-6 text-gray-900">Interview Booking</h3>
                        <p class="mt-1 text-sm text-gray-500">Book interview with appropriate team member to evaluate the candidate.</p>
                    </div>
                    <div class="md:mt-0 md:col-span-2">
                        <form class="space-y-6" @onsubmit:preventDefault>
                            <div>
                                <div class="mt-1">
                                    <DateTimeInput @bind-Value="bookingDate" name="bookingTime" rows="3" class="" placeholder="The candidate demonstrated..."></DateTimeInput>
                                </div>
                                <div class="mt-3">
                                    <label for="appt" class="block text-sm font-medium text-gray-700">Time</label>
                                    <input type="time" @bind-value="bookingTime" @bind-value:event="oninput" id="appt" name="appt" min="09:00" max="18:00" required class="block w-full sm:text-sm rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 border-gray-300">
                                </div>
                                <div class="mt-1">
                                    <EmployeeLookup Users="apiAppUsers" OnEmployeeSelection="OnEmployeeSelectionChanged" ControlTitle="Interviewer"></EmployeeLookup>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="pt-8 flex justify-end">
                <button type="button" @onclick="() => showBookInterview = false" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-blue-gray-900 hover:bg-blue-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">Cancel</button>
                <button type="button" @onclick="async () => await submitInterviewBooking()" class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">Save</button>
            </div>
        </div>
    </div>
</div>


<!-- Complete interview -->
<div class="fixed z-10 inset-0 overflow-y-auto @(showCompleteInterview == false ? "hidden" : "")" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <!--
        Background overlay, show/hide based on modal state.

        Entering: "ease-out duration-300"
        From: "opacity-0"
        To: "opacity-100"
        Leaving: "ease-in duration-200"
        From: "opacity-100"
        To: "opacity-0"
        -->
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

        <!-- This element is to trick the browser into centering the modal contents. -->
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

        <!--
        Modal panel, show/hide based on modal state.

        Entering: "ease-out duration-300"
        From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        To: "opacity-100 translate-y-0 sm:scale-100"
        Leaving: "ease-in duration-200"
        From: "opacity-100 translate-y-0 sm:scale-100"
        To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        -->
        <div class="inline-block bg-white rounded-lg px-4 pt-2 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-xl sm:w-full sm:p-6 lg:max-w-3xl">
            <div class="bg-white py-5 sm:rounded-lg sm:p-6">
                <div class="md:grid md:grid-cols-3 md:gap-6">
                    <div class="md:col-span-1">
                        <h3 class="text-lg font-medium leading-6 text-gray-900">Interview Result</h3>
                        <p class="mt-1 text-sm text-gray-500">Provide context of other team members for how the interview with the candidate went.</p>
                    </div>
                    <div class="md:mt-0 md:col-span-2">
                        <form class="space-y-6" @onsubmit="submitInterviewCompleted" @onsubmit:preventDefault>
                            <div>
                                <label for="interviewNotes" class="block text-sm font-medium text-gray-700"> Notes </label>
                                <div class="mt-1">
                                    <TextAreaInput @bind-Value="interviewRequest.Notes" name="interviewNotes" rows="3" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border border-gray-300 rounded-md" placeholder="The candidate demonstrated..."></TextAreaInput>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="pt-8 flex justify-end">
                <button type="button" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-blue-gray-900 hover:bg-blue-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">Cancel</button>
                <button type="submit" class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">Save</button>
            </div>
        </div>
    </div>
</div>
</div>

@code {
    JobApplication jobApp = new();
    List<JobApplicationEvent> jobAppEvents = new();
    List<ApiAppUser> apiAppUsers = new();

    ApiAppUser? employeeSelection;

    [Parameter]
    public int JobId { get; set; }

    [Parameter]
    public int JobAppId { get; set; }

    string? selectedResult;

    string? searchTerm;

    ResponseStatus? errorStatus;

    Interview interviewRequest = new()
        {
            BookingTime = DateTime.UtcNow
        };

    DateTime? bookingDate = DateTime.UtcNow.Date;
    TimeOnly? bookingTime = TimeOnly.FromDateTime(DateTime.UtcNow);

    bool showBookInterview = false;
    bool showCompleteInterview = false;

    bool showAdvancePhoneScreen = false;
    bool showCompletePhoneScreen = false;

    void resetInterview()
    {
        interviewRequest = new();
        interviewRequest.BookingTime = DateTime.UtcNow;
        bookingDate = DateTime.UtcNow.Date;
        bookingTime = TimeOnly.FromDateTime(DateTime.UtcNow);
        employeeSelection = null;
    }

    protected override async Task OnInitializedAsync()
    {
        await refreshData();
    }

    protected override Task OnParametersSetAsync()
    {
        var crumbs = new List<BreadCrumb>
        {
            new BreadCrumb
            {
                Name = "Jobs",
                Url = "/jobs"
            },
            new BreadCrumb
            {
                Name = $"{jobApp.Position.Title}",
                Url = $"/jobs/{JobId}"
            },
            new BreadCrumb
            {
                Name = "Applications",
                Url = $"/jobs/{JobId}/applications"
            },
            new BreadCrumb
            {
                Name = $"{jobApp.Applicant.DisplayName}",
                Url = $"/jobs/{JobId}/applications/{JobAppId}"
            }
        };
        breadCrumbs.BreadCrumbs = crumbs;
        return base.OnParametersSetAsync();
    }

    async Task refreshData()
    {
        await refreshJobApp();
        await refreshJobAppEvents();
        if (apiAppUsers.Count == 0)
            await getAppUsers();
    }

    async Task refreshJobApp()
    {
        var api = await ApiAsync(new QueryJobApplication
            {
                Id = JobAppId
            });
        if (api.Succeeded)
            jobApp = api.Response!.Results[0];
        else
            errorStatus = api.Error;
    }

    async Task getAppUsers()
    {
        var api = await ApiAsync(new QueryAppUser());
        if (api.Succeeded)
            apiAppUsers = api.Response!.Results;
        else
            errorStatus = api.Error;
    }

    void OnEmployeeSelectionChanged(ApiAppUser val)
    {
        Console.WriteLine($"Api user selection changed: {val.Email}");
        employeeSelection = val;
    }

    async Task refreshJobAppEvents()
    {
        var api = await ApiAsync(new QueryJobAppEvents
            {
                JobApplicationId = JobAppId
            });
        if (api.Succeeded)
            jobAppEvents = api.Response!.Results;
        else
            errorStatus = api.Error;
    }

    async Task submitPhoneScreenBooking()
    {
        await createPhoneScreenBooking();

    }

    async Task createJobApplicationEvent()
    {
        //var createJobAppEvent = new CreateEve
    }

    async Task<bool> createPhoneScreenBooking()
    {
        if (employeeSelection == null)
            return false;
        var createPhone = new CreatePhoneScreen();
        createPhone.JobApplicationId = JobAppId;
        createPhone.ApiAppUserId = employeeSelection.Id;
        var api = await ApiAsync(createPhone);
        if (api.Succeeded)
        {
            resetInterview();
            await refreshData();
            showAdvancePhoneScreen = false;
            return true;
        }
        else
            errorStatus = api.Error;

        return false;
    }

    async Task submitPhoneScreenCompleted()
    {
        var updatePhone = new UpdatePhoneScreen();
        updatePhone.JobApplicationId = JobAppId;
        updatePhone.ApiAppUserId = interviewRequest.ApiAppUserId;
        updatePhone.Notes = interviewRequest.Notes;
        var api = await ApiAsync(updatePhone);
        if (api.Succeeded)
        {
            resetInterview();
            await refreshData();
        }
        else
            errorStatus = api.Error;
    }

    async Task submitInterviewBooking()
    {
        var createInterview = new CreateInterview();
        createInterview.JobApplicationId = JobAppId;
        createInterview.ApiAppUserId = interviewRequest.ApiAppUserId;
        createInterview.BookingTime = interviewRequest.BookingTime;
        var api = await ApiAsync(createInterview);
        if (api.Succeeded)
        {
            resetInterview();
            await refreshData();
        }
        else
            errorStatus = api.Error;
    }

    async Task submitInterviewCompleted()
    {
        var updateInterview = new UpdateInterview();
        updateInterview.JobApplicationId = JobAppId;
        updateInterview.ApiAppUserId = interviewRequest.ApiAppUserId;
        updateInterview.BookingTime = interviewRequest.BookingTime;
        updateInterview.Notes = interviewRequest.Notes;
        var api = await ApiAsync(updateInterview);
        if (api.Succeeded)
        {
            resetInterview();
            await refreshData();
        }
        else
            errorStatus = api.Error;
    }

    Dictionary<JobApplicationStatus, string> jobAppStatusMapping = new()
        {
            { JobApplicationStatus.Applied, "Applied" },
            { JobApplicationStatus.Interview, "Interview" },
            { JobApplicationStatus.InterviewCompleted, "Interview Completed" },
            { JobApplicationStatus.PhoneScreening, "Phone Screening" },
            { JobApplicationStatus.PhoneScreeningCompleted, "Phone Screening Completed" },
            { JobApplicationStatus.Offer, "Offer" },
            { JobApplicationStatus.Disqualified, "Disqualified" }
        };
}